name: Deploy to AKS

on:
  push:
    branches:
      - main
    paths:
      - "k8s/**"
  workflow_dispatch:  # allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # üîë Authenticate with Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ‚õìÔ∏è Get AKS credentials
      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AKS_RG }} \
            --name ${{ secrets.AKS_NAME }} \
            --overwrite-existing
      
      # üîë Create or update secret for ACR
      - name: Create imagePullSecret for ACR
        run: |
          az acr update -n ${{ secrets.ACR_NAME }} --admin-enabled true
          ACR_USERNAME=$(az acr credential show -n ${{ secrets.ACR_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show -n ${{ secrets.ACR_NAME }} --query "passwords[0].value" -o tsv)
          kubectl create secret docker-registry acr-cred \
            --docker-server=${{ secrets.ACR_NAME }}.azurecr.io \
            --docker-username=$ACR_USERNAME \
            --docker-password=$ACR_PASSWORD \
            --namespace=noteapp \
            --dry-run=client -o yaml | kubectl apply -f -

      # üê≥ Update manifests with latest image
      - name: Set image tag in k8s manifest
        run: |
          IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/noteapp:${{ github.sha }}
          sed -i "s|IMAGE_PLACEHOLDER|$IMAGE|g" k8s/deployment.yaml

      # üöÄ Deploy to AKS
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml

      # ‚úÖ Verify rollout
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/note-app -n note-app
